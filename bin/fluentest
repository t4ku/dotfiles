#!/usr/bin/env ruby

# Requirements:
# gem install fluentd --no-ri --no-rdoc
#
# Usage:
# fluentest ./sample.log  '^(?<device>[^\t]+)\t(?<method>[^\t]+)\t(?<path>[^\t]+)$'
#
# => 
# [1411700066, {"device"=>"0", "method" => "GET", "path" => "/foo" }]
# [1411700089, {"device"=>"0", "method" => "GET", "path" => "/bar" }]
#
# Options:
# -l number of lines to parse (default: 10)
# -t time_format (default: nil)
# 
require 'fluent/load'
require 'optparse'

opt = OptionParser.new
limit=10
time_format=nil

opt.on('-l VAL') { |v| limit = v.to_i }
opt.on('-t VAL') { |v| time_format = time_format }
opt.parse!(ARGV)

log_path,regexp = ARGV

regexp = Regexp.new(regexp)
parser = Fluent::TextParser::RegexpParser.new(regexp, 'time_format' => time_format)

log_file = File.open(log_path)
log_file.each_line do |line|
    ret = parser.call(line)
    p ret
    break if log_file.lineno >= limit
end
